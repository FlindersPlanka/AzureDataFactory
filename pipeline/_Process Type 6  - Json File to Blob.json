{
	"name": "_Process Type 6  - Json File to Blob",
	"properties": {
		"description": "Extract data from an Json File into parquet files in Azure Blob Storage (ADLS Gen 2).\n\nUse a For Each loop operating in parallel mode.\n\nFor debugging purposes, you can simulate \n JSON array with:\n \n[{\"ProductNumber\" : \"HL-U509\"},{\"ProductNumber\" : \"FR-R92R-62\"}]",
		"activities": [
			{
				"name": "Get Entities to Process",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[Process].[up_GetEntitiesToProcess]",
						"storedProcedureParameters": {
							"BatchSize": {
								"type": "Int32",
								"value": "999999"
							},
							"EntityGroupKeyList": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.EntityGroupKeyList",
									"type": "Expression"
								}
							},
							"ProcessTypeKey": {
								"type": "Int32",
								"value": {
									"value": "@variables('ProcessTypeKey')",
									"type": "Expression"
								}
							}
						}
					},
					"dataset": {
						"referenceName": "ControlDB_Dataset",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Filter out Invalid Entities",
				"description": "If the EntityKey < 0, filter out.  An EntityKey of -1 is used to indicate there are no Entities to Process.",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "Get Entities to Process",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Entities to Process').output.value",
						"type": "Expression"
					},
					"condition": {
						"value": "@greater(item().EntityKey, 0)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Process Entities",
				"description": "Process each individual Entity.",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Filter out Invalid Entities",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Filter out Invalid Entities').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Set Process Start Time",
							"description": "Set the LastRunStartTime for this Entity",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[Process].[up_UpdateEntityProcessStartTime]",
								"storedProcedureParameters": {
									"EntityKey": {
										"value": {
											"value": "@item().EntityKey",
											"type": "Expression"
										},
										"type": "Int32"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ControlDB",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Import Data",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Translate JSON Variables",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureBlobFSSource",
									"recursive": true
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSetting"
									}
								},
								"enableStaging": false,
								"dataIntegrationUnits": 0
							},
							"inputs": [
								{
									"referenceName": "JsonFile_Dataset",
									"type": "DatasetReference",
									"parameters": {
										"FilePath": {
											"value": "@activity('Translate JSON Variables').output.result.FilePath",
											"type": "Expression"
										},
										"FileName": {
											"value": "@activity('Translate JSON Variables').output.result.FileName",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ParquetBlobStorage_Dataset",
									"type": "DatasetReference",
									"parameters": {
										"FilePath": {
											"value": "@{activity('Translate JSON Variables').output.result.Scope}/@{activity('Translate JSON Variables').output.result.SourceSystem}/@{activity('Translate JSON Variables').output.result.EntityName}/Current",
											"type": "Expression"
										},
										"FileName": {
											"value": "@{activity('Translate JSON Variables').output.result.EntityName}.parquet",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Indicate Success",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Import Data",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[Process].[up_UpdateEntityDiagnostics]",
								"storedProcedureParameters": {
									"EntityKey": {
										"value": {
											"value": "@item().EntityKey",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"Result": {
										"value": "Success",
										"type": "String"
									},
									"ExecutionMessage": {
										"value": {
											"value": "@{activity('Translate JSON Variables').output.result.SourceSystem}.@{activity('Translate JSON Variables').output.result.EntityName} - Rows read: @{activity('Import Data').output.rowsRead} | Rows written: @{activity('Import Data').output.rowsCopied}",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ControlDB",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Indicate Failure",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Import Data",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[Process].[up_UpdateEntityDiagnostics]",
								"storedProcedureParameters": {
									"EntityKey": {
										"value": {
											"value": "@item().EntityKey",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"ExecutionMessage": {
										"value": {
											"value": "Error in Data Factory '@{pipeline().DataFactory}' | Pipeline '@{pipeline().Pipeline}' | Entity '@{activity('Translate JSON Variables').output.result.SourceSystem}.@{activity('Translate JSON Variables').output.result.EntityName}' | @{activity('Import Data').output.errors[0].Message}",
											"type": "Expression"
										},
										"type": "String"
									},
									"Result": {
										"value": "Failure",
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ControlDB",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Translate JSON Variables",
							"description": "Accept four parameters, VariablesJSON, OverrideVariablesJSON, ConfigurationJSON and DefaultsJSON and translate into a recordset where the columns are a representation of the nodes in the resultant JSON.",
							"type": "AzureFunctionActivity",
							"dependsOn": [
								{
									"activity": "Set Process Start Time",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"functionName": "TranslateVariables",
								"method": "POST",
								"body": {
									"value": "@item()",
									"type": "Expression"
								}
							},
							"linkedServiceName": {
								"referenceName": "AzureFunctions",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			}
		],
		"parameters": {
			"EntityGroupKeyList": {
				"type": "String",
				"defaultValue": "3"
			}
		},
		"variables": {
			"ProcessTypeKey": {
				"type": "String",
				"defaultValue": "6"
			}
		},
		"annotations": []
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}